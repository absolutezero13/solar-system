{"version":3,"sources":["Context/PlanetContext.tsx","Components/Planets.tsx","Components/PlanetInfoCard.tsx","Components/PlanetInfos.tsx","Components/PlanetInfoLink.tsx","Components/TimeInput.tsx","Components/SideBar.tsx","PlanetSVG/mercury.svg","PlanetSVG/venus.svg","PlanetSVG/earth.svg","PlanetSVG/mars.svg","PlanetSVG/jupiter.svg","PlanetSVG/saturn.svg","PlanetSVG/uranus.svg","PlanetSVG/neptune.svg","Data/PlanetInfos.ts","PlanetSVG/sun.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PlanetContext","createContext","Planets","miliSeconds","useContext","className","style","animationDuration","PlanetInfoCard","planetName","svg","distanceFromSun","radius","averageTemperature","src","alt","PlanetInfos","useState","displayStatus","setDisplayStatus","onClick","motion","img","drag","dragConstraints","left","right","top","bottom","dragElastic","PlanetInfoLink","planetInfos","map","planetInfo","TimeInput","setmiliSeconds","value","setValue","input","useRef","ref","onChange","e","target","type","min","step","htmlFor","SideBar","numberOfMoons","mercury","venus","earth","mars","jupiter","saturn","uranus","neptune","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27e56377.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\ninterface PlanetInfos {\r\n  planetName: string;\r\n  radius: string;\r\n  distanceFromSun?: string;\r\n  numberOfMoons?: string;\r\n  averageTemperature: string;\r\n  svg: string;\r\n}\r\n\r\ntype ContextProps = {\r\n  miliSeconds: number;\r\n  setmiliSeconds: (ms: number) => void;\r\n  planetInfos: PlanetInfos[];\r\n};\r\n\r\nconst PlanetContext = createContext<ContextProps>({} as ContextProps);\r\n\r\nexport default PlanetContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PlanetContext from \"../Context/PlanetContext\";\r\nimport { motion } from \"framer-motion\";\r\nconst Planets: React.FC = () => {\r\n  const { miliSeconds } = useContext(PlanetContext);\r\n\r\n  return (\r\n    <div className=\"planets\">\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds * 165}ms` }}\r\n        className=\"planets__neptun-orbit\"\r\n      >\r\n        <div className=\"planet neptun\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds * 84}ms` }}\r\n        className=\"planets__uranus-orbit\"\r\n      >\r\n        <div className=\"planet uranus\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds * 29}ms` }}\r\n        className=\"planets__saturn-orbit\"\r\n      >\r\n        <div className=\"planet saturn\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds * 12}ms` }}\r\n        className=\"planets__jupiter-orbit\"\r\n      >\r\n        <div className=\"planet jupiter\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds * 2}ms` }}\r\n        className=\"planets__mars-orbit\"\r\n      >\r\n        <div className=\"planet mars\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds}ms` }}\r\n        className=\"planets__earth-orbit\"\r\n      >\r\n        <div className=\"planet earth\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${(miliSeconds * 2) / 3}ms` }}\r\n        className=\"planets__venus-orbit\"\r\n      >\r\n        <div className=\"planet venus\"></div>\r\n      </div>\r\n      <div\r\n        style={{ animationDuration: `${miliSeconds / 4}ms` }}\r\n        className=\"planets__mercury-orbit\"\r\n      >\r\n        <div className=\"planet mercury\"></div>\r\n      </div>\r\n      <div className=\"planet sun\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planets;\r\n","import React, { useContext } from \"react\";\r\nimport PlanetContext from \"../Context/PlanetContext\";\r\n\r\ninterface PlanetInfoCardProps {\r\n  planetName: string;\r\n  averageTemperature: string;\r\n  distanceFromSun?: string;\r\n  radius: string;\r\n  svg: string;\r\n}\r\n\r\nconst PlanetInfoCard: React.FC<PlanetInfoCardProps> = ({\r\n  planetName,\r\n  svg,\r\n  distanceFromSun,\r\n  radius,\r\n  averageTemperature,\r\n}) => {\r\n  return (\r\n    <div className=\"planet-info-card\">\r\n      <div className=\"planet-info-card__header\">\r\n        <img\r\n          className=\"planet-info-card__header__image\"\r\n          src={svg}\r\n          alt={planetName + \"logo\"}\r\n        />\r\n        <h3>{planetName}</h3>\r\n      </div>\r\n\r\n      <div className=\"planet-info-card__info\">\r\n        {distanceFromSun && (\r\n          <div className=\"planet-info-card__info__distance\">\r\n            <p>\r\n              <b>Distance From Sun</b>\r\n            </p>\r\n            <p>{distanceFromSun}</p>\r\n          </div>\r\n        )}\r\n        <div className=\"planet-info-card__info__temperature\">\r\n          <p>\r\n            <b>Avg. Temperature</b>\r\n          </p>\r\n          <p>{averageTemperature}</p>\r\n        </div>\r\n        <div className=\"planet-info-card__info__radius\">\r\n          <p>\r\n            <b>Radius</b>\r\n          </p>\r\n          <p>{radius}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanetInfoCard;\r\n","import React, { useState } from \"react\";\r\nimport PlanetInfoCard from \"./PlanetInfoCard\";\r\nimport { motion } from \"framer-motion\";\r\ninterface PlanetInfosProps {\r\n  planetName: string;\r\n  averageTemperature: string;\r\n  distanceFromSun?: string;\r\n  radius: string;\r\n  svg: string;\r\n}\r\n\r\nconst PlanetInfos: React.FC<PlanetInfosProps> = ({\r\n  planetName,\r\n  svg,\r\n  distanceFromSun,\r\n  radius,\r\n  averageTemperature,\r\n}) => {\r\n  const [displayStatus, setDisplayStatus] = useState(false);\r\n  const displayPlanetInfo = () => {\r\n    setDisplayStatus(!displayStatus);\r\n  };\r\n\r\n  return (\r\n    <div onClick={displayPlanetInfo} className=\"planet-list__infos\">\r\n      <li>\r\n        <motion.img\r\n          drag\r\n          dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\r\n          dragElastic={0.8}\r\n          src={svg}\r\n          alt=\"planet-logo\"\r\n        />\r\n        <p>{planetName}</p>\r\n      </li>\r\n      {displayStatus && (\r\n        <PlanetInfoCard\r\n          planetName={planetName}\r\n          svg={svg}\r\n          distanceFromSun={distanceFromSun}\r\n          averageTemperature={averageTemperature}\r\n          radius={radius}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanetInfos;\r\n","import React, { useContext, useState } from \"react\";\r\nimport PlanetContext from \"../Context/PlanetContext\";\r\nimport PlanetInfos from \"./PlanetInfos\";\r\nconst PlanetInfoLink: React.FC = () => {\r\n  const { planetInfos } = useContext(PlanetContext);\r\n\r\n  return (\r\n    <div className=\"planet-info-link\">\r\n      <ul className=\"planet-list\">\r\n        {planetInfos!.map((planetInfo) => {\r\n          const {\r\n            planetName,\r\n            svg,\r\n            distanceFromSun,\r\n            averageTemperature,\r\n            radius,\r\n          } = planetInfo;\r\n\r\n          return (\r\n            <PlanetInfos\r\n              key={planetName}\r\n              planetName={planetName}\r\n              svg={svg}\r\n              distanceFromSun={distanceFromSun}\r\n              averageTemperature={averageTemperature}\r\n              radius={radius}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanetInfoLink;\r\n","import React, { useRef, useState, useContext } from \"react\";\r\nimport PlanetContext from \"./../Context/PlanetContext\";\r\n\r\nconst TimeInput: React.FC = () => {\r\n  const { setmiliSeconds } = useContext(PlanetContext);\r\n  const [value, setValue] = useState(10000);\r\n  const input = useRef(null);\r\n  const changeHandler = (e: any) => {\r\n    const value = e.target.value;\r\n    setValue(value);\r\n    if (!e.target.value) {\r\n      setmiliSeconds(10000);\r\n    } else {\r\n      setmiliSeconds(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"time-input\">\r\n      <p>Set how many miliseconds a year equals to.</p>\r\n      <div>\r\n        <input\r\n          ref={input}\r\n          value={value}\r\n          onChange={changeHandler}\r\n          className=\"time-input__input\"\r\n          type=\"number\"\r\n          min=\"1000\"\r\n          step=\"100\"\r\n        />\r\n        <label htmlFor=\"input\">ms</label>\r\n        <p className=\"note\">\r\n          Note: It's 10000 (10 seconds) by default. It's not recommended to go\r\n          below 100 miliseconds.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeInput;\r\n","import React from \"react\";\r\nimport PlanetInfoLink from \"./PlanetInfoLink\";\r\nimport TimeInput from \"./TimeInput\";\r\n\r\nconst SideBar: React.FC = () => {\r\n  return (\r\n    <div className=\"side-bar\">\r\n      <TimeInput />\r\n      <PlanetInfoLink />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","export default __webpack_public_path__ + \"static/media/mercury.9abe977a.svg\";","export default __webpack_public_path__ + \"static/media/venus.49bf2264.svg\";","export default __webpack_public_path__ + \"static/media/earth.82e95fdd.svg\";","export default __webpack_public_path__ + \"static/media/mars.98dd0195.svg\";","export default __webpack_public_path__ + \"static/media/jupiter.4f592dd4.svg\";","export default __webpack_public_path__ + \"static/media/saturn.ed54a6d3.svg\";","export default __webpack_public_path__ + \"static/media/uranus.20a760db.svg\";","export default __webpack_public_path__ + \"static/media/neptune.7c8e067e.svg\";","import mercury from \"../PlanetSVG/mercury.svg\";\r\nimport venus from \"../PlanetSVG/venus.svg\";\r\nimport earth from \"../PlanetSVG/earth.svg\";\r\nimport mars from \"../PlanetSVG/mars.svg\";\r\nimport jupiter from \"../PlanetSVG/jupiter.svg\";\r\nimport saturn from \"../PlanetSVG/saturn.svg\";\r\nimport uranus from \"../PlanetSVG/uranus.svg\";\r\nimport neptune from \"../PlanetSVG/neptune.svg\";\r\nimport sun from \"../PlanetSVG/sun.svg\";\r\n\r\nexport const planetInfos = [\r\n  {\r\n    planetName: \"Sun\",\r\n    radius: \"696340 KM\",\r\n    averageTemperature: \"5505°C\",\r\n    svg: sun,\r\n  },\r\n\r\n  {\r\n    planetName: \"Mercury\",\r\n    radius: \"2439 KM\",\r\n    distanceFromSun: \"57,9 MILLION KM\",\r\n    numberOfMoons: \"0\",\r\n    averageTemperature: \"430°C\",\r\n    svg: mercury,\r\n  },\r\n  {\r\n    planetName: \"Venus\",\r\n    radius: \"6051 KM\",\r\n    distanceFromSun: \"108,2 MILLION KM\",\r\n    numberOfMoons: \"0\",\r\n    averageTemperature: \"471°C\",\r\n    svg: venus,\r\n  },\r\n  {\r\n    planetName: \"Earth\",\r\n    radius: \"6378 KM\",\r\n    distanceFromSun: \"149,6 MILLION KM\",\r\n    numberOfMoons: \"1\",\r\n    averageTemperature: \"16°C\",\r\n    svg: earth,\r\n  },\r\n  {\r\n    planetName: \"Mars\",\r\n    radius: \"3396 KM\",\r\n    distanceFromSun: \"227,9 MILLION KM\",\r\n    numberOfMoons: \"2\",\r\n    averageTemperature: \"-28°C\",\r\n    svg: mars,\r\n  },\r\n  {\r\n    planetName: \"Jupiter\",\r\n    radius: \"71492 KM\",\r\n    distanceFromSun: \"778,5 MILLION KM\",\r\n    numberOfMoons: \"67\",\r\n    averageTemperature: \"-108°C\",\r\n    svg: jupiter,\r\n  },\r\n  {\r\n    planetName: \"Saturn\",\r\n    radius: \"60268 KM\",\r\n    distanceFromSun: \"1,42 BILLION KM\",\r\n    numberOfMoons: \"62\",\r\n    averageTemperature: \"-138°C\",\r\n    svg: saturn,\r\n  },\r\n  {\r\n    planetName: \"Uranus\",\r\n    radius: \"25559 KM\",\r\n    distanceFromSun: \"2,87 BILLION KM\",\r\n    numberOfMoons: \"27\",\r\n    averageTemperature: \"-195°C\",\r\n    svg: uranus,\r\n  },\r\n  {\r\n    planetName: \"Neptune\",\r\n    radius: \"24764\",\r\n    distanceFromSun: \"3,67 BILLION KM\",\r\n    numberOfMoons: \"13\",\r\n    averageTemperature: \"-201°C\",\r\n    svg: neptune,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/sun.db2717a2.svg\";","import React, { useState } from \"react\";\nimport Planets from \"./Components/Planets\";\nimport SideBar from \"./Components/SideBar\";\nimport PlanetContext from \"./Context/PlanetContext\";\nimport { planetInfos } from \"./Data/PlanetInfos\";\nconst App: React.FC = () => {\n  const [miliSeconds, setmiliSeconds] = useState(10000);\n\n  return (\n    <PlanetContext.Provider\n      value={{\n        miliSeconds,\n        setmiliSeconds,\n        planetInfos,\n      }}\n    >\n      <div className=\"App\">\n        <SideBar />\n        <Planets />\n      </div>\n    </PlanetContext.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./sass/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}